name: Download and Commit Framework

on:
  workflow_dispatch:

jobs:
  download-and-commit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Change to Project Directory
      run: cd $GITHUB_WORKSPACE

    - name: Verify Zip Checksum
      run: |
          local_checksum=$(openssl sha256 EsVoiceCall/EsVoiceCall.xcframework.zip | awk '{print $2}')
          echo "LOCAL_CHECKSUM=$local_checksum" >> $GITHUB_ENV
          
    - name: Download Framework
      run: |
        mkdir -p EsVoiceCall
        curl -L -o EsVoiceCall/EsVoiceCall.xcframework.zip https://es-sc-ios-branding-sdk.s3.ap-southeast-2.amazonaws.com/EsVoiceCall/EsVoiceCall.xcframework.zip

    - name: Get New Downloaded Zip Checksum
      run: |
          remote_checksum=$(openssl sha256 EsVoiceCall/EsVoiceCall.xcframework.zip | awk '{print $2}')
          echo "REMOTE_CHECKSUM=$remote_checksum" >> $GITHUB_ENV

    - name: Compare Checksums
      id: compare
      run: |
          if [ "${{ env.LOCAL_CHECKSUM }}" != "${{ env.REMOTE_CHECKSUM }}" ]; then
            echo "Checksums are different."
            echo "DIFFERENT_CHECKSUMS=true" >> $GITHUB_ENV
          else
            echo "Checksums are the same."
            echo "DIFFERENT_CHECKSUMS=false" >> $GITHUB_ENV
          fi

    - name: Configure Git
      run: |
        git config --global user.name 'Vivek Lalan'
        git config --global user.email 'iamviveklalan@gmail..com'

        
    - name: Get Last Tag
      id: last_tag
      run: |
        git fetch --tags
        # Debugging: List all tags
        echo "Available tags:"
        git tag -l

        # Get the most recent tag and handle the case where no tags are found
        TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "1.0.1")
        echo "Resolved tag: $TAG"
        echo "$TAG" > last_tag.txt

        # Debugging: Output the contents of last_tag.txt
        cat last_tag.txt

        # Set the environment variable in GitHub Actions
        echo "LAST_TAG=$(<last_tag.txt)" >> $GITHUB_ENV

    - name: Increment Tag
      id: increment_tag
      run: |
          tag_parts=($(echo $LAST_TAG | tr '.' ' '))
          patch=$((tag_parts[2] + 1))
          NEW_TAG="${tag_parts[0]}.${tag_parts[1]}.$patch"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

    - name: Update Tag and Push
      if: ${{ env.DIFFERENT_CHECKSUMS == 'true' }}
      run: |
        git pull
        git add EsVoiceCall/EsVoiceCall.xcframework.zip
        git commit -m "Add downloaded framework zip file"
        git tag ${{ env.NEW_TAG }} -m "Version ${{ env.NEW_TAG }}"
        git push --tags
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
